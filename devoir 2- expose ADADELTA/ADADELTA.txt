{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f336e5d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#representation de la fonction objective x**2 + y**2\n",
    "\n",
    "from math import sqrt\n",
    "from numpy import asarray\n",
    "from numpy import arange\n",
    "from numpy.random import rand\n",
    "from numpy.random import seed\n",
    "from numpy import meshgrid\n",
    "from matplotlib import pyplot\n",
    "from mpl_toolkits.mplot3d import Axes3D\n",
    "import math\n",
    "\n",
    "#definition de la fonction objective\n",
    "def Objective(x, y):\n",
    "    return x**2.0 + y**2.0\n",
    "\n",
    "min, max = -1.0, 1.0\n",
    "xaxis = arange(min, max, 0.1)\n",
    "yaxis = arange(min, max, 0.1)\n",
    "x,y = meshgrid(xaxis, yaxis)\n",
    "results = Objective(x, y)\n",
    "figure = pyplot.figure()\n",
    "axis = figure.gca(projection = '3d')\n",
    "axis.plot_surface(x, y, results, cmap = 'jet')\n",
    "pyplot.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e3316bbe",
   "metadata": {},
   "outputs": [],
   "source": [
    "#utilisation de la descente du gradient\n",
    "\n",
    "from math import sqrt\n",
    "from numpy import asarray\n",
    "from numpy import arange\n",
    "from numpy.random import rand\n",
    "from numpy.random import seed\n",
    "from numpy import meshgrid\n",
    "from matplotlib import pyplot\n",
    "from mpl_toolkits.mplot3d import Axes3D\n",
    "import math\n",
    "\n",
    "#definition de la fonction objective\n",
    "def Objective(x, y):\n",
    "    x= float(x)\n",
    "    y= float(y)\n",
    "    return x**2.0 + y**2.0\n",
    "\n",
    "#definition du gradient\n",
    "def Gradient(x, y):\n",
    "    x= float(x)\n",
    "    y= float(y)\n",
    "    return (x*2)+(y*2)\n",
    "\n",
    "def normeGradient(x,y):\n",
    "    x= float(x)\n",
    "    y= float(y)\n",
    "    ng=math.sqrt(math.pow(x*2, 2) + math.pow(2*y, 2))\n",
    "    return ng\n",
    "\n",
    "#descente de gradient stochastique simple\n",
    "def GradientDescent(x, y, alpha, precision):\n",
    "    x= float(x)\n",
    "    y= float(y)\n",
    "    alpha= float(alpha)\n",
    "    precision= float(precision)\n",
    "    nbreiteration = 0\n",
    "    \n",
    "    while(normeGradient(x, y)> precision):\n",
    "        x = x - (alpha*(Gradient(x,0)))\n",
    "        y = y - (alpha*(Gradient(0, y)))\n",
    "        nbreiteration += 1 \n",
    "    return (x, y), nbreiteration\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "eafdacfa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "entrer la coordonnée x 4\n",
      "entrer la coordonnée y 2\n",
      "entrer le pas 0.25\n",
      "entrer la précision 0.001\n",
      " on obtient :  ((0.000244140625, 0.0001220703125), 14)\n"
     ]
    }
   ],
   "source": [
    "#test Descente Gradient\n",
    "import os\n",
    "a = input(\"entrer la coordonnée x \")\n",
    "b = input(\"entrer la coordonnée y \")\n",
    "c = input(\"entrer le pas \")\n",
    "d = input(\"entrer la précision \")\n",
    "print(\" on obtient : \", GradientDescent(a, b, c, d))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "50339844",
   "metadata": {},
   "outputs": [],
   "source": [
    "#utilisation de la methode AdaDelta\n",
    "#**********************************\n",
    "def AdaDelta(x, y, rho, precision):\n",
    "    x= float(x)\n",
    "    y= float(y)\n",
    "    precision= float(precision)\n",
    "    nbreiteration = 0\n",
    "    while normeGradient(x, y)>precision:\n",
    "        #initialisation de la moyenne décroissante des gradients au carrée\n",
    "        sq_grad_avg_x = 0\n",
    "        sq_grad_avg_y = 0\n",
    "        sq_para_avg_x = 0\n",
    "        sq_para_avg_y = 0\n",
    "        \n",
    "        sgx = Gradient(x, 0)**2.0 #calul du carré du gradient et mise a jour de la moyenne mobile decroissante des gradients au carré avec l'hyperparamètre\n",
    "        sgy = Gradient(0, y)**2.0\n",
    "    \n",
    "        sq_grad_avg_x = (sq_grad_avg_x * rho) + (sgx *(1.0 -rho))\n",
    "        sq_grad_avg_y = (sq_grad_avg_y * rho) + (sgy *(1.0 -rho))\n",
    "    \n",
    "    \n",
    "        alpha_x= (precision + sqrt(sq_para_avg_x)) / (precision + sqrt(sq_grad_avg_x)) # calcul de la taille du pas adaptatif \n",
    "        alpha_y= (precision + sqrt(sq_para_avg_y)) / (precision + sqrt(sq_grad_avg_y))\n",
    "    \n",
    "        change_x = alpha_x * Gradient(x, 0) # pour modifier la variable\n",
    "        change_y = alpha_y * Gradient(0, y)\n",
    "    \n",
    "        sq_para_avg_x = (sq_para_avg_x * rho) + (change_x**2.0 *(1.0 - rho))\n",
    "        sq_para_avg_y = (sq_para_avg_y * rho) + (change_y**2.0 *(1.0 - rho))\n",
    "    \n",
    "        value_x = x - change_x\n",
    "        value_y = y - change_y\n",
    "\n",
    "        x = value_x\n",
    "        y = value_y\n",
    "\n",
    "        solution_eval = Objective(x, y)\n",
    "        print(x, y, solution_eval)       \n",
    "        nbreiteration +=1\n",
    "    return[x, y, solution_eval], nbreiteration\n",
    "\n",
    "def AdaDeltaN(x, y, rho, precision, nbreiteration):\n",
    "    x= float(x)\n",
    "    y= float(y)\n",
    "    precision= float(precision)\n",
    "    for i in range( nbreiteration):\n",
    "        #initialisation de la moyenne décroissante des gradients au carrée\n",
    "        sq_grad_avg_x = 0\n",
    "        sq_grad_avg_y = 0\n",
    "        sq_para_avg_x = 0\n",
    "        sq_para_avg_y = 0\n",
    "        \n",
    "        sgx = Gradient(x, 0)**2.0 #calul du carré du gradient et mise a jour de la moyenne mobile decroissante des gradients au carré avec l'hyperparamètre\n",
    "        sgy = Gradient(0, y)**2.0\n",
    "    \n",
    "        sq_grad_avg_x = (sq_grad_avg_x * rho) + (sgx *(1.0 -rho))\n",
    "        sq_grad_avg_y = (sq_grad_avg_y * rho) + (sgy *(1.0 -rho))\n",
    "    \n",
    "    \n",
    "        alpha_x= (precision + sqrt(sq_para_avg_x)) / (precision + sqrt(sq_grad_avg_x)) # calcul de la taille du pas adaptatif \n",
    "        alpha_y= (precision + sqrt(sq_para_avg_y)) / (precision + sqrt(sq_grad_avg_y))\n",
    "    \n",
    "        change_x = alpha_x * Gradient(x, 0) # pour modifier la variable\n",
    "        change_y = alpha_y * Gradient(0, y)\n",
    "    \n",
    "        sq_para_avg_x = (sq_para_avg_x * rho) + (change_x**2.0 *(1.0 - rho))\n",
    "        sq_para_avg_y = (sq_para_avg_y * rho) + (change_y**2.0 *(1.0 - rho))\n",
    "    \n",
    "        value_x = x - change_x\n",
    "        value_y = y - change_y\n",
    "\n",
    "        x = value_x\n",
    "        y = value_y\n",
    "\n",
    "        solution_eval = Objective(x, y)\n",
    "        print(x, y, solution_eval)       \n",
    "    return[x, y, solution_eval]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2d18a5d2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "entrer la coordonnée x 4\n",
      "entrer la coordonnée y 2\n",
      "entrer la précision 0.001\n",
      "choix de la condition d'arret\n",
      " 1-Norme du gradient\n",
      " 2-nombre Diteration\n",
      "1\n",
      "3.990012484394507 1.9900249376558603 19.880398878116235\n",
      "3.980024999999951 1.9800499999992207 19.761197003121524\n",
      "3.97003754697268 1.9700751882816316 19.64239437185576\n",
      "3.9600501254702185 1.9601005037735666 19.523990981130083\n",
      "3.95006273565128 1.9501259477648047 19.40598682772645\n",
      "3.940075377675779 1.9401515215648237 19.28838190839723\n",
      "3.930088051704844 1.930177226503203 19.171176219864773\n",
      "3.920100757900828 1.9202030639300365 19.054369758820947\n",
      "3.910113496427323 1.9102290352163578 18.937962521926725\n",
      "3.900126267449171 1.9002551417545737 18.821954505811696\n",
      "3.8901390711324773 1.890281384958911 18.70634570707363\n",
      "3.880151907644624 1.8803077662658751 18.59113612227798\n",
      "3.8701647771542826 1.8703342871347193 18.476325747957397\n",
      "3.860177679831427 1.8603609490479276 18.361914580611245\n",
      "3.850190615847347 1.8503877535117101 18.247902616705083\n",
      "3.8402035853746628 1.8404147020565118 18.13428985267017\n",
      "3.830216588587338 1.8304417962375348 18.021076284902918\n",
      "3.820229625660694 1.8204690376352748 17.90826190976435\n",
      "3.8102426967714225 1.8104964278560725 17.79584672357956\n",
      "3.8002558020976034 1.800523968532679 17.68383072263717\n",
      "3.7902689418187157 1.790551661324839 17.572213903188707\n",
      "3.7802821161156537 1.7805795079198865 17.46099626144807\n",
      "3.7702953251707427 1.7706075100333618 17.3501777935909\n",
      "3.760308569167753 1.7606356694096414 17.23975849575397\n",
      "3.7503218482919154 1.7506639878225883 17.129738364034576\n",
      "3.740335162729937 1.7406924670762192 17.02011739448988\n",
      "3.7303485126700164 1.7307211090053922 16.91089558313626\n",
      "3.7203618983018605 1.720749915476513 16.80207292594865\n",
      "3.7103753198166998 1.7107788883882609 16.693649418859852\n",
      "3.7003887774073054 1.700808029672338 16.585625057759835\n",
      "3.690402271268005 1.6908373412942381 16.477999838495016\n",
      "3.6804158015947004 1.6808668252540393 16.370773756867553\n",
      "3.6704293685848834 1.670896483587219 16.26394680863456\n",
      "3.660442972437654 1.6609263183654943 16.157518989507363\n",
      "3.6504566133537386 1.650956331697686 16.051490295150728\n",
      "3.640470291535506 1.64098652573061 15.945860721182031\n",
      "3.630484007186986 1.6310169026499945 15.840630263170459\n",
      "3.6204977605138886 1.6210474646814252 15.73579891663616\n",
      "3.6105115517236213 1.61107821409132 15.631366677049389\n",
      "3.600525381025308 1.6011091531879331 15.52733353982962\n",
      "3.5905392486298084 1.5911402843223899 15.423699500344645\n",
      "3.580553154749737 1.5811716098897546 15.320464553909654\n",
      "3.5705670995994834 1.5712031323301312 15.217628695786281\n",
      "3.5605810833952303 1.5612348541297993 15.115191921181648\n",
      "3.5505951063549754 1.551266777822385 15.013154225247344\n",
      "3.5406091686985506 1.5412989059900697 14.911515603078428\n",
      "3.5306232706476433 1.5313312412648385 14.810276049712371\n",
      "3.5206374124258173 1.521363786329768 14.709435560128004\n",
      "3.5106515942585332 1.5113965439203554 14.608994129244376\n",
      "3.500665816373171 1.5014295168258929 14.508951751919673\n",
      "3.490680078999051 1.4914627078908858 14.409308422950033\n",
      "3.4806943823674574 1.481496120016518 14.310064137068373\n",
      "3.4707087267116585 1.4715297561621672 14.21121888894315\n",
      "3.460723112266931 1.46156361934697 14.11277267317713\n",
      "3.450737539270584 1.4515977126514408 14.014725484306098\n",
      "3.4407520079619793 1.4416320392191442 13.91707731679754\n",
      "3.4307665185825593 1.4316666022584275 13.819828165049284\n",
      "3.4207810713758673 1.4217014050442105 13.722978023388109\n",
      "3.4107956665875747 1.411736450919839 13.626526886068321\n",
      "3.4008103044655043 1.401771743299002 13.53047474727028\n",
      "3.390824985259656 1.3918072856677184 13.434821601098887\n",
      "3.3808397092222324 1.3818430815863916 13.339567441582044\n",
      "3.3708544766076654 1.3718791346919403 13.244712262669044\n",
      "3.3608692876726405 1.361915448700004 13.150256058228935\n",
      "3.3508841426761258 1.3519520274072294 13.056198822048833\n",
      "3.340899041879398 1.3419888746936406 12.962540547832184\n",
      "3.33091398554607 1.3320259945250954 12.869281229196973\n",
      "3.320928973942119 1.3220633909558341 12.776420859673895\n",
      "3.310944007335914 1.3121010681311227 12.683959432704436\n",
      "3.3009590859982465 1.3021390302899956 12.59189694163895\n",
      "3.2909742102023576 1.2921772817681025 12.500233379734633\n",
      "3.280989380223969 1.2822158270006647 12.408968740153464\n",
      "3.271004596341313 1.272254670525543 12.318103015960054\n",
      "3.2610198588351613 1.2622938169864282 12.227636200119461\n",
      "3.2510351679888596 1.2523332711361523 12.137568285494929\n",
      "3.241050524088355 1.2423730378401343 12.047899264845523\n",
      "3.2310659274222306 1.2324131220799592 11.958629130823752\n",
      "3.221081378281738 1.222453528957103 11.869757875973054\n",
      "3.211096876960828 1.2124942636968064 11.781285492725244\n",
      "3.2011124237561868 1.2025353316521068 11.693211973397851\n",
      "3.1911280189672686 1.192576738308036 11.605537310191398\n",
      "3.18114366289633 1.1826184892859906 11.518261495186556\n",
      "3.1711593558484656 1.1726605903482854 11.431384520341245\n",
      "3.161175098131644 1.1627030474028983 11.344906377487597\n",
      "3.151190890056743 1.152745866508416 11.258827058328848\n",
      "3.141206731937587 1.142789053879191 11.173146554436112\n",
      "3.131222624090983 1.1328326158907218 11.087864857245037\n",
      "3.1212385668367615 1.122876559085267 11.00298195805237\n",
      "3.1112545604978115 1.1129208901777055 10.918497848012366\n",
      "3.1012706054001224 1.102965616061656 10.83441251813311\n",
      "3.0912867018728227 1.093010743815871 10.750725959272676\n",
      "3.0813028502482203 1.0830562807109165 10.66743816213517\n",
      "3.071319050861843 1.0731022342161591 10.584549117266604\n",
      "3.061335304052482 1.063148612007071 10.502058815050663\n",
      "3.0513516101622327 1.0531954219728734 10.41996724570427\n",
      "3.0413679695365383 1.0432426722245394 10.338274399273004\n",
      "3.0313843825242337 1.033290371103172 10.25698026562636\n",
      "3.0214008494775904 1.0233385271887832 10.176084834452812\n",
      "3.011417370752361 1.0133871493094935 10.095588095254683\n",
      "3.0014339467078255 1.00343624655118 10.015490037342834\n",
      "2.9914505777068383 0.9934858282675958 9.935790649831127\n",
      "2.9814672641158757 0.983535904090992 9.85648992163069\n",
      "2.971484006305084 0.9735864839432696 9.77758784144393\n",
      "2.9615008046483284 0.9636375780476951 9.699084397758323\n",
      "2.9515176595232444 0.9536891969412143 9.620979578839949\n",
      "2.941534571311286 0.9437413514874005 9.543273372726738\n",
      "2.931551540397781 0.9337940528900763 9.465965767221476\n",
      "2.9215685671719793 0.9238473127076541 9.389056749884487\n",
      "2.91158565202711 0.913901142868237 9.312546308026002\n",
      "2.901602795360434 0.903955555685533 9.236434428698225\n",
      "2.891619997573299 0.8940105638756334 9.160721098687034\n",
      "2.8816372590711974 0.8840661805747125 9.085406304503323\n",
      "2.8716545802638214 0.8741224193577103 9.01049003237396\n",
      "2.861671961565123 0.8641792942580644 8.935972268232344\n",
      "2.851689403393372 0.8542368197885624 8.861852997708523\n",
      "2.841706906171217 0.8442950109633915 8.788132206118863\n",
      "2.8317244703257463 0.8343538833214704 8.714809878455245\n",
      "2.8217420962885504 0.8244134529511505 8.641885999373741\n",
      "2.8117597844957856 0.8144737365163882 8.569360553182753\n",
      "2.8017775353882386 0.8045347512844911 8.497233523830591\n",
      "2.7917953494113914 0.794596515155555 8.425504894892425\n",
      "2.7818132270154896 0.7846590466937149 8.354174649556622\n",
      "2.771831168655609 0.7747223651603485 8.283242770610364\n",
      "2.7618491747917275 0.7647864905493769 8.212709240424578\n",
      "2.751867245888792 0.7548514436248255 8.142574040938047\n",
      "2.741885382416793 0.7449172459608209 8.072837153640737\n",
      "2.731903584850837 0.7349839199842139 8.003498559556215\n",
      "2.721921853671221 0.7250514890200398 7.9345582392231515\n",
      "2.7119401893635082 0.7151199773400446 7.866016172675806\n",
      "2.701958592418605 0.7051894102145285 7.797872339423445\n",
      "2.691977063332841 0.695259813967782 7.730126718428621\n",
      "2.6819956026080463 0.6853312160374178 7.662779288084224\n",
      "2.6720142107516365 0.67540364503793 7.595830026189213\n",
      "2.662032888276694 0.6654771308288494 7.529278909922955\n",
      "2.652051635702052 0.655551704587895 7.463125915818024\n",
      "2.6420704535523822 0.6456273988895715 7.397371019731405\n",
      "2.632089342358282 0.6357042477897029 7.332014196813924\n",
      "2.622108302656364 0.625782286916449 7.267055421477818\n",
      "2.6121273349893475 0.6158615535684098 7.202494667362246\n",
      "2.6021464399061514 0.6059420868204893 7.138331907296627\n",
      "2.5921656179619883 0.5960239276382667 7.074567113261603\n",
      "2.5821848697184624 0.5861071190017062 7.011200256347434\n",
      "2.5722041957436668 0.5761917060391359 6.948231306709613\n",
      "2.5622235966122835 0.5662777361725333 6.885660233521476\n",
      "2.552243072905687 0.5563652592752801 6.823487004923514\n",
      "2.5422626252120475 0.5464543278436923 6.7617115879691525\n",
      "2.532282254126438 0.5365449971837907 6.7003339485666285\n",
      "2.5223019602509416 0.5266373256149645 6.639354051416624\n",
      "2.5123217441947623 0.5167313746923917 6.578771859945301\n",
      "2.502341606574339 0.5068272094503253 6.518587336232249\n",
      "2.492361548013459 0.49692489866863343 6.458800440932877\n",
      "2.482381569143375 0.48702451516530976 6.399411133194729\n",
      "2.4724016706029257 0.4771261361180446 6.340419370567073\n",
      "2.462421853038658 0.4672298434183843 6.281825108903106\n",
      "2.4524421171049497 0.4573357240625174 6.223628302253995\n",
      "2.4424624634641385 0.44744387058331975 6.165828902753891\n",
      "2.4324828927866498 0.43755438152898807 6.108426860494923\n",
      "2.4225034057511294 0.4276673619944108 6.05142212339108\n",
      "2.4125240030445796 0.41778292421239166 5.994814637029699\n",
      "2.4025446853624954 0.4079011882129852 5.938604344509137\n",
      "2.3925654534090053 0.3980222825605612 5.882791186260958\n",
      "2.382586307897015 0.3881463451798346 5.827375099854793\n",
      "2.372607249548353 0.37827352428403593 5.772356019783666\n",
      "2.362628279093922 0.3684039794207256 5.717733877227334\n",
      "2.35264939727385 0.3585378826535663 5.6635085997907115\n",
      "2.3426706048376453 0.3486754199017756 5.609680111214058\n",
      "2.332691902544358 0.3388167924631311 5.556248331051021\n",
      "2.322713291162741 0.3289622187514802 5.5032131743099475\n",
      "2.3127347714714155 0.31911193628595735 5.450574551053114\n",
      "2.302756344259042 0.3092662039768451 5.398332365947516\n",
      "2.2927780103244935 0.2994253047626353 5.34648651775974\n",
      "2.28279977047703 0.28958954866489234 5.295036898785917\n",
      "2.272821625536483 0.2797592763426956 5.24398339420609\n",
      "2.262843576333437 0.2699348632476849 5.193325881350046\n",
      "2.252865623709421 0.2601167245053274 5.143064228859018\n",
      "2.242887768517099 0.2503053206796853 5.0931982957241715\n",
      "2.2329100116204694 0.2405011646200579 5.043727930178529\n",
      "2.222932353895065 0.2307048296416776 4.99465296841345\n",
      "2.21295479622816 0.22091695936373723 4.945973233083737\n",
      "2.2029773395189816 0.21113827962291928 4.8976885315562555\n",
      "2.1929999846789228 0.20136961300859826 4.849798653844988\n",
      "2.1830227326317657 0.19161189674054438 4.802303370159571\n",
      "2.1730455843139054 0.1818662048512381 4.755202427973154\n",
      "2.16306854067458 0.17213377597272478 4.708495548486686\n",
      "2.1530916026761093 0.1624160485078493 4.662182422327281\n",
      "2.143114771294132 0.15271470565837722 4.6162627042634234\n",
      "2.133138047517855 0.14303173379973713 4.570736006642046\n",
      "2.123161432350307 0.13336949921473687 4.525601891140598\n",
      "2.113184926808594 0.12373085052614405 4.480859858262965\n",
      "2.1032085319241656 0.1141192578099897 4.436509333761706\n",
      "2.093232248743087 0.10453900522043577 4.392549650790519\n",
      "2.0832560783263134 0.09499546362901252 4.3489800259936215\n",
      "2.0732800217499765 0.08549548631189645 4.305799526767291\n",
      "2.063304080105673 0.07604800005636844 4.26300702529329\n",
      "2.0533282545007636 0.06666491842530074 4.220601132079804\n",
      "2.0433525460586774 0.05736260986343609 4.178580096494825\n",
      "2.0333769559192243 0.04816437233151579 4.1369416516254205\n",
      "2.023401485238914 0.039104851788100296 4.095682759900413\n",
      "2.0134261351912848 0.030238513913079718 4.054799169594985\n",
      "2.0034509069672386 0.021657415973573287 4.014284580294503\n",
      "1.9934758017753849 0.013533066638647777 3.9741289161566598\n",
      "1.9835008208423937 0.0062309471877703354 3.934314330985306\n",
      "1.9735259654133568 0.0006829314384349892 3.8948052025560713\n",
      "1.9635512367521586 -0.0005187924356490174 3.8555337284965225\n",
      "1.9535766361418552 0.00042125457952379855 3.816461850734747\n",
      "1.9436021648850645 -0.00035578802813179225 3.777589501931031\n",
      "1.9336278243043656 0.00030851762822163586 3.7389166581071613\n",
      "1.9236536157427084 -0.0002726570985636076 3.7004433077018892\n",
      "1.9136795405638334 0.0002444580740462054 3.6621694437323544\n",
      "1.9037056001527033 -0.00022166839811682028 3.6240950611896428\n",
      "1.8937317959159452 0.00020284802310357807 3.5862201560103517\n",
      "1.8837581292823045 -0.00018703079365758527 3.5485447246176847\n",
      "1.873784601703111 0.00017354310901959984 3.5110687636968967\n",
      "1.8638112146527566 -0.00016190032957288675 3.4737922700771007\n",
      "1.8538379696291865 0.00015174448965259976 3.4367152406652544\n",
      "1.8438648681544032 -0.00014280523026728785 3.399837672407388\n",
      "1.8338919117749843 0.00013487440929367957 3.3631595622648134\n",
      "1.8239191020626135 -0.00012778909236776036 3.3266809071989423\n",
      "1.8139464406146268 0.00012141985532075243 3.290401704161255\n",
      "1.803973929054574 -0.000115662552977811 3.254321950086423\n",
      "1.7940015690327942 0.00011043240887709902 3.218441641887444\n",
      "1.7840293622270085 -0.00010565969457244847 3.1827607764520778\n",
      "1.7740573103429287 0.00010128651981150194 3.1472793506401455\n",
      "1.7640854151148826 -9.72644132093012e-05 3.111997361281414\n",
      "1.7541136783064577 9.355247468304637e-05 3.076914805173877\n",
      "1.7441421017111625 -9.011594759794292e-05 3.042031679082315\n",
      "1.7341706871531064 8.692510318690055e-05 3.007347979737051\n",
      "1.7241994364876998 -8.395436018959575e-05 2.9728637038328363\n",
      "1.7142283516023737 8.118158368710114e-05 2.938578848027841\n",
      "1.70425743441732 -7.858752188419132e-05 2.904493408942704\n",
      "1.6942866868862538 7.615535011624004e-05 2.870607383159636\n",
      "1.6843161109971976 -7.387029895002849e-05 2.836920767221545\n",
      "1.6743457087732885 7.171934878951854e-05 2.8034335576311906\n",
      "1.6643754822736099 -6.969097748698569e-05 2.7701457508503435\n",
      "1.6544054335940472 6.77749505083555e-05 2.737057343298951\n",
      "1.6444355648681697 -6.596214549579304e-05 2.7041683313543006\n",
      "1.634465878268138 6.42444048126035e-05 2.6714787113501792\n",
      "1.6244963760056408 -6.261441098931827e-05 2.6389884795760246\n",
      "1.6145270603328576 6.106558101916332e-05 2.606697632276064\n",
      "1.6045579335434539 -5.959197625134797e-05 2.5746061656484427\n",
      "1.5945889979736045 5.818822525711371e-05 2.5427140758443336\n",
      "1.5846202560030505 -5.6849457537215144e-05 2.5110213589670343\n",
      "1.5746517100561874 5.557124633104268e-05 2.479528011071039\n",
      "1.5646833626031897 -5.4349559099940326e-05 2.4482340281610995\n",
      "1.5547152161611693 5.318071450784451e-05 2.4171394061912594\n",
      "1.5447472732953704 -5.206134492446704e-05 2.3862441410638655\n",
      "1.5347795366204051 5.0988363640078126e-05 2.3555482286285585\n",
      "1.5248120088015265 -4.995893611440501e-05 2.325051664681242\n",
      "1.5148446925559436 4.8970454691384317e-05 2.2947544449630164\n",
      "1.50487759065418 -4.8020516301290286e-05 2.2646565651591\n",
      "1.4949107059214768 4.7106902745879426e-05 2.2347580208977087\n",
      "1.4849440412392412 -4.622756322362661e-05 2.205058807748917\n",
      "1.474977599546544 4.5380598803247116e-05 2.175558921223484\n",
      "1.465011383841668 -4.456424859639464e-05 2.1462583567716518\n",
      "1.4550453971837072 4.3776877416212395e-05 2.1171571097819073\n",
      "1.445079642694221 -4.301696473851448e-05 2.0882551755797167\n",
      "1.4351141235589457 4.228309480777529e-05 2.059552549426221\n",
      "1.425148843029564 -4.157394775160769e-05 2.031049226516898\n",
      "1.415183804425536 4.088829158566999e-05 2.0027452019801864\n",
      "1.4052190111359943 -4.0224975006492684e-05 1.9746404708760703\n",
      "1.3952544666217062 3.958292088299757e-05 1.9467350281946294\n",
      "1.3852901744171047 -3.896112036885697e-05 1.9190288688545412\n",
      "1.3753261381323925 3.8358627567608504e-05 1.891521987701545\n",
      "1.3653623614557207 -3.777455469085067e-05 1.864214379506859\n",
      "1.355398848155448 3.720806765710145e-05 1.8371060389655554\n",
      "1.3454356020824803 -3.665838208518131e-05 1.8101969606948831\n",
      "1.3354726271726978 3.612475964142654e-05 1.7834871392325458\n",
      "1.3255099274494706 -3.560650470477015e-05 1.756976569034924\n",
      "1.3155475070262692 3.510296131784891e-05 1.7306652444752497\n",
      "1.3055853701093723 -3.461351039589204e-05 1.7045531598417216\n",
      "1.2956235210006766 3.413756716829271e-05 1.6786403093355642\n",
      "1.2856619641006148 -3.36745788305206e-05 1.652926687069028\n",
      "1.2757007039111854 3.322402238645408e-05 1.6274122870633296\n",
      "1.2657397450390986 -3.278540266333981e-05 1.602097103246525\n",
      "1.2557790921990464 3.235825048346404e-05 1.5769811294513174\n",
      "1.2458187502170999 -3.194212097827629e-05 1.5520643594127959\n",
      "1.2358587240342427 3.1536592032171284e-05 1.527346786766103\n",
      "1.2258990187100438 -3.114126284443226e-05 1.5028284050440266\n",
      "1.2159396394264794 3.0755752598990357e-05 1.478509207674513\n",
      "1.2059805914919095 -3.0379699232677905e-05 1.4543891879781021\n",
      "1.1960218803452167 3.0012758293564005e-05 1.4304683391652735\n",
      "1.1860635115601166 -2.9654601881772528e-05 1.4067466543337102\n",
      "1.1761054908496462 2.9304917665907126e-05 1.3832241264654654\n",
      "1.1661478240708423 -2.8963407968855727e-05 1.359900748424039\n",
      "1.1561905172296156 2.8629788917326703e-05 1.336776512951351\n",
      "1.1462335764858342 -2.8303789649988643e-05 1.3138514126646113\n",
      "1.1362770081586253 2.7985151579552347e-05 1.2911254400530854\n",
      "1.1263208187319065 -2.767362770455264e-05 1.2685985874747419\n",
      "1.1163650148601596 2.736898196696532e-05 1.2462708471527857\n",
      "1.106409603374459 -2.7070988652134074e-05 1.2241422111720661\n",
      "1.096454591288769 2.677943182778914e-05 1.2022126714753596\n",
      "1.0864999858065236 -2.6494104819216397e-05 1.1804822198595137\n",
      "1.076545794327504 2.6214809717885776e-05 1.158950847971453\n",
      "1.0665920244550329 -2.594135692107483e-05 1.1376185473040394\n",
      "1.056638684003498 2.5673564700228523e-05 1.1164853091917761\n",
      "1.046685781006229 -2.5411258795982573e-05 1.0955511248063519\n",
      "1.0367333237237433 2.5154272037947124e-05 1.0748159851520174\n",
      "1.0267813206523826 -2.4902443987501047e-05 1.0542798810607827\n",
      "1.0168297805333664 2.4655620601987308e-05 1.0339428031874338\n",
      "1.00687871236228 -2.4413653918827315e-05 1.0138047420043494\n",
      "0.9969281253990295 2.4176401758188275e-05 0.9938656877961216\n",
      "0.9869780291782853 -2.3943727442943777e-05 0.9741256306539542\n",
      "0.9770284335204473 2.3715499534764647e-05 0.9545845604698441\n",
      "0.9670793485431629 -2.3491591585265708e-05 0.9352424669305233\n",
      "0.9571307846734284 2.327188190121515e-05 0.9160993395111532\n",
      "0.9471827526603138 -2.3056253322887384e-05 0.89715516746876\n",
      "0.9372352635883476 2.2844593014708472e-05 0.878409939835395\n",
      "0.9272883288916027 -2.2636792267405467e-05 0.8598636454110056\n",
      "0.9173419603685294 2.243274631092835e-05 0.8415162727560047\n",
      "0.9073961701975825 -2.2232354137466164e-05 0.8233678101835177\n",
      "0.8974509709536939 2.2035518333926922e-05 0.805418245751292\n",
      "0.8875063756256476 -2.1842144923296046e-05 0.7876675672532524\n",
      "0.8775623976344147 2.165214321432852e-05 0.7701157622106779\n",
      "0.8676190508525147 -2.146542565906843e-05 0.7527628178629829\n",
      "0.8576763496244715 2.1281907717723836e-05 0.7356087211580782\n",
      "0.8477343087884404 -2.110150773045781e-05 0.7186534587422884\n",
      "0.8377929436990856 2.0924146795685618e-05 0.7018970169497991\n",
      "0.8278522702517981 -2.0749748654496084e-05 0.6853393817916081\n",
      "0.8179123049083463 2.0578239580840245e-05 0.6689805389439476\n",
      "0.8079730647240664 -2.0409548277154154e-05 0.65282047373615\n",
      "0.7980345673766998 2.0243605775104526e-05 0.6368591711379199\n",
      "0.7880968311970025 -2.0080345341166055e-05 0.6210966157459769\n",
      "0.7781598752012567 1.991970238675808e-05 0.60553279177003\n",
      "0.7682237191258285 -1.9761614382685686e-05 0.5901676830180413\n",
      "0.7582883834639279 1.9606020777646336e-05 0.575001272880733\n",
      "0.7483538895047419 -1.945286292057852e-05 0.5600335443152893\n",
      "0.7384202593751263 1.9302083986642428e-05 0.5452644798281993\n",
      "0.7284875160840598 -1.9153628906635975e-05 0.5306940614571849\n",
      "0.7185556835700818 1.9007444299661497e-05 0.5163222707521504\n",
      "0.708624786751959 -1.886347840886966e-05 0.5021490887550901\n",
      "0.6986948515828452 1.8721681040117685e-05 0.4881744959788754\n",
      "0.6887659051082299 -1.858200350338874e-05 0.47439847238485\n",
      "0.6788379755279952 1.8444398556828574e-05 0.4608209973591428\n",
      "0.6689110922629372 -1.830882035326375e-05 0.4474420496876086\n",
      "0.6589852860261414 1.817522438907417e-05 0.4342616075292941\n",
      "0.6490605888996421 -1.8043567455299638e-05 0.4212796483883206\n",
      "0.6391370344168443 1.7913807590867433e-05 0.40849614908406295\n",
      "0.6292146576512315 -1.7785904037834237e-05 0.3959110857194949\n",
      "0.6192934953119459 1.7659817198541836e-05 0.3835244336475563\n",
      "0.6093735858468874 -1.7535508594591864e-05 0.37133616743538794\n",
      "0.5994549695540516 1.7412940827549936e-05 0.3593462608262595\n",
      "0.5895376887019096 -1.7292077541294793e-05 0.3475546866990056\n",
      "0.5796217876597219 1.7172883385932537e-05 0.33596141702475973\n",
      "0.5697073130387882 -1.705532398320061e-05 0.32456642282075987\n",
      "0.5597943138457478 1.6939365893290216e-05 0.31336967410097377\n",
      "0.5498828416491875 -1.6824976583019706e-05 0.3023711398232653\n",
      "0.5399729507609622 1.6712124395295204e-05 0.2915707878327956\n",
      "0.5300646984338149 -1.6600778519798118e-05 0.2809685848013169\n",
      "0.5201581450770831 1.649090896484234e-05 0.2705644961619819\n",
      "0.5102533544925111 -1.6382486530347057e-05 0.26035848603924605\n",
      "0.5003503941324553 1.6275482781873868e-05 0.2503505171733947\n",
      "0.49044933538308166 -1.6169870025679634e-05 0.2405405508391712\n",
      "0.48055025387550704 1.6065621284738956e-05 0.23092854675791843\n",
      "0.4706532298282553 -1.5962710275692564e-05 0.22151446300257663\n",
      "0.46075834842488095 1.586111138668021e-05 0.21229825589479884\n",
      "0.4508657002311751 -1.576079965601862e-05 0.20327987989335067\n",
      "0.4409753816570307 1.5661750751687222e-05 0.19445928747285432\n",
      "0.4310874954688161 -1.5563940951586084e-05 0.1858364289918128\n",
      "0.4212021513590205 1.5467347124532412e-05 0.17741125254870604\n",
      "0.41131946658101215 -1.53719467119635e-05 0.1691837038247851\n",
      "0.40143956665802905 1.527771771031573e-05 0.1611537259119948\n",
      "0.39156258617704665 -1.5184638654050562e-05 0.15332125912423034\n",
      "0.38168866967998627 1.5092688599300051e-05 0.14568624078986692\n",
      "0.37181797266691213 -1.5001847108105573e-05 0.13824860502318803\n",
      "0.36195066272849846 1.491209423322488e-05 0.1310082824719698\n",
      "0.3520869208282338 -1.482341050348362e-05 0.12396520003804046\n",
      "0.3422269427587039 1.4735776909648767e-05 0.11711928056711232\n",
      "0.33237094080102964 -1.4649174890802325e-05 0.11047044250355988\n",
      "0.32251914562234973 1.456358632119477e-05 0.10401859950506848\n",
      "0.3126718084534187 -1.4478993497558651e-05 0.09776366001117259\n",
      "0.30282920359730453 1.4395379126863635e-05 0.09170552675860466\n",
      "0.2929916313313067 -1.4312726314495165e-05 0.08584409623503446\n",
      "0.2831594212782143 1.4231018552839776e-05 0.08017925806113513\n",
      "0.2733329363407384 -1.4150239710260754e-05 0.07471089428887943\n",
      "0.2635125773155269 1.4070374020448713e-05 0.06943887860144697\n",
      "0.2536987883321574 -1.3991406072132278e-05 0.06436307539696426\n",
      "0.2438920633000162 1.3913320799134707e-05 0.05948333873431961\n",
      "0.23409295359493787 -1.3836103470763029e-05 0.054799511114239495\n",
      "0.22430207728197346 1.3759739682516682e-05 0.05031142206233883\n",
      "0.21452013025642827 -1.3684215347103424e-05 0.0460188864724927\n",
      "0.20474789980057712 1.3609516685750684e-05 0.04192170265796611\n",
      "0.1949862812101051 -1.3535630219801033e-05 0.03801965004335948\n",
      "0.18523629835976885 1.3462542762581083e-05 0.03431248641126936\n",
      "0.17549912937798726 -1.3390241411533409e-05 0.030799944591730074\n",
      "0.1657761390243623 1.3318713540601639e-05 0.02748172844721283\n",
      "0.1560689199730689 -1.3247946792859276e-05 0.02435750795706828\n",
      "0.14637934609381498 1.3177929073373166e-05 0.02142691313651068\n",
      "0.13670964214337655 -1.310864854229297e-05 0.018689526426806744\n",
      "0.12706247628538514 1.3040093608158307e-05 0.0161448730498181\n",
      "0.11744108496671829 -1.2972252921415606e-05 0.01379240860643929\n",
      "0.1078494446281309 1.2905115368137067e-05 0.011631502873138275\n",
      "0.09829251282545134 -1.2838670063934376e-05 0.009661418242372965\n",
      "0.08877657501575252 1.2772906348060204e-05 0.00788128043467467\n",
      "0.07930975720961705 -1.2707813777690737e-05 0.006290037750136935\n",
      "0.06990280837777173 1.2643382122382762e-05 0.004886402778954585\n",
      "0.06057034009097299 -1.2579601358699188e-05 0.0036687662569825008\n",
      "0.05133287998218951 1.2516461664997006e-05 0.0026350647239276846\n",
      "0.042220461089631706 -1.2453953416372003e-05 0.0017825674897220605\n",
      "0.03327932410888712 1.2392067179754722e-05 0.0011075135667076845\n",
      "0.02458551227087695 -1.2330793709152505e-05 0.0006044475656699146\n",
      "0.016275528639098452 1.2270123941032448e-05 0.00026489298303805544\n",
      "0.008625646506821565 -1.2210048989840505e-05 7.44019267459394e-05\n",
      "0.002295197157131474 1.2150560143652044e-05 5.2680776262162055e-06\n",
      "-0.0008509784810249083 -1.2091648859949396e-05 7.243105831396126e-07\n",
      "0.0006034423201875469 1.203330676152206e-05 3.642874342649467e-07\n",
      "-0.0004734712727542819 -1.1975525632485447e-05 2.243184593377339e-07\n",
      " on obtient :  ([-0.0004734712727542819, -1.1975525632485447e-05, 2.243184593377339e-07], 406)\n"
     ]
    }
   ],
   "source": [
    "#test \n",
    "import os\n",
    "a = input(\"entrer la coordonnée x \")\n",
    "b = input(\"entrer la coordonnée y \")\n",
    "d = input(\"entrer la précision \")\n",
    "rho = 0.99\n",
    "choix = int(input(\"choix de la condition d'arret\\n 1-Norme du gradient\\n 2-nombre Diteration\\n\"))\n",
    "if choix==1:\n",
    "    print(\" on obtient : \", AdaDelta(a, b, rho, d))\n",
    "else:\n",
    "    nbreiter = int(input(\"entrer le nombre diterations\"))\n",
    "    print(\" on obtient : \", AdaDeltaN(a, b, rho, d, nbreiter))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "868dad1e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7b5dcee6",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "38ea789e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
